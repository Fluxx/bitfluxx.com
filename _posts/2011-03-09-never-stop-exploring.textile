---
layout: post
title: Never Stop Exploring
---

After a solid 2+ years, I decided it was time to upgrade my current Macbook to a new Macbook Pro.  There wasn't anything inherently wrong with the old laptop, other than it was...well...old, slow and had a small screen.  That, and the "new Macbook Pros":http://www.apple.com/macbookpro/ came out recently and I figured now was a good time to pick one up.

In the new Macbook, I ditched the optical drive and put in its place a 125GB SSD hard disk.  The SSD drive is my main drive, which holds the OS and most of my working files.  The stock "spinning" drive is now the secondary drive.  It holds my big files (movies, music, databases, etc) and, unless I'm actually using files off of it, doesn't even spin.  The result is that applications load _blazingly_ fast, and I have about 5-6 hours of battery life.  It's pretty sweet.

With the fresh start of a new laptop, I wanted to use it as an opportunity to try "Homebrew":http://mxcl.github.com/homebrew/ instead of "Macports":http://www.macports.org/ and "zsh":http://www.zsh.org/ as opposed to "bash":http://www.gnu.org/software/bash/.

Unlike Macports, which manages packages with port files, shell scripts and SVN, Homebrew uses Git and Ruby.  Packages are built in a simple "Ruby DSL":https://github.com/mxcl/homebrew/blob/master/Library/Formula/ruby.rb and installed to @/usr/local@, self-contained in a folder with the same name as the package.  Since Homebrew recipes are held in a Git repository, you can easily commit fixes, new packages or even checkout a revision containing the exact version of a package you want quite easily.  Oh and package installation takes mere seconds, as opposed to Macport's 5-45 minutes.

zsh is a shell, like bash, but with a few enhancements.  It has a lot of functionality, but the main reason I installed it was cause of "oh-my-zsh":https://github.com/robbyrussell/oh-my-zsh.  oh-my-zsh is a "community driven framework for managing your zsh configuration."  The main appeal is its "large collection of themes":https://wiki.github.com/robbyrussell/oh-my-zsh/themes and  "plugins":https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins.  There are plugins to show the version of ruby (if using RVM) you're using or the current git branch you're in at your prompt, rake task autocompletion, plus much, much more.

I decided to try an SSD drive, Homebrew and zsh on the suggestion of a couple coworkers.  It's not that I didn't know about both of these technologies before; it's more that I never gave them a serious look.  Spinning disks, Macports and bash had been working alright for me, and I was comfortable with them and thus had no reason to change.  

In actuality, I had plenty of reasons to change - I just didn't know it.  Had I known how much time and sanity they would save me, and how much better of a developer I would be with them, I would have made the switch sooner.

The moral of the story here is never be complacent as a software developer.  Never stop exploring technologies and solutions to problems.  The software world is ever-changing, improving and expanding.  New tools come out every day focused on making you happier and more productive when you write software.  Go out and learn about them.  The day you settle down with "Macports and spinning disks" is the day you stop growing as a programmer.
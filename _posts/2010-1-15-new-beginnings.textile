---
layout: post
title: New Beginnings
---

Back in late 2007, my girlfriend and I started a hobby web/content development company called "GLUEinteractive":http://gluei.com.  We had been doing off and on freelance development on the side for a while, so we decided to "make it official."  I coded up the site all myself.  I used the CakePHP web framework backed by MySQL, but aside from the usual static "About" and "Clients" pages, I went the extra mile with a custom-created user login and blogging system  I was pretty happy with the way things turned out.

Shortly after I finished the GLUEinteractive website, however, I was introduced to Ruby by a coworker.  He gave me the pickaxe book to read, and I've never looked back.  Aside from the language being a joy to program in and teaching me a lot of very interesting and new concepts, the Ruby community is full of examples of people coming together and solving problems in an organized way.  "Rack":http://rack.rubyforge.org/, for example, standardized the web server interface for nearly all ruby applications.  "Rake":http://rake.rubyforge.org/ is another good example, as is "Bundler":http://gembundler.com/ or the "Rubygems":http://rubygems.org system itself.  Smart people collaborated with other smart people to create software that solves common problems.  And now all ruby developers can leverage that work.

Consequently, this blog is built upon the simple projects of "Jekyll":https://github.com/mojombo/jekyll for the markup and "Compass":https://github.com/chriseppstein/compass for the CSS.  It's hosted on "Heroku":http://www.heroku.com.  These are the already established best practices for static HTML generation, CSS frameworks and simple hosting.  And because of the awesome ruby community I'm able to leverage all their hard work to let me focus on blogging, and not mucking with CSS or Apache.  

It sits in stark contrast to the overly complex PHP-based blogging solution I created for GLUEinteractive.  PHP is inconsistent and lacks many modern language features, which is alright - javscript has those same problem.  PHP's biggest weakness, really, is the community of developers it creates.  The languages "that'll do" attitude permeates its users, who never strive to do better, work together or solve the tough problems they all face.

Ruby was a fresh start to my software development career, so I felt it was fitting to mention it in the inaugural post of my new blog.  I'm leaving GLUEinteractive behnind and starting fresh with this blog.  Expect content about software engineering, web development and ruby, plus other topics as I find them interesting.

I promise to blog at least weekly, but hopefully more often.  So stay tuned!